<?php
/**
 * @file
 * Functions to support theming
 */

use Drupal\Component\Utility\SafeMarkup;
use Drupal\Component\Utility\Xss;
use Drupal\Core\Template\Attribute;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\StringTranslation\PluralTranslatableMarkup;
use Drupal\Core\Url;
use Drupal\Core\Link;
use Drupal\node\NodeInterface;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 */
function scitalk_theme_preprocess_html(&$variables) {

}


/**
 * Implements hook_preprocess_HOOK().
 * Alters variables for regions.
 */
function scitalk_theme_preprocess_region(&$variables) {
  $region = $variables['region'];
  if (($region == 'middle_highlight') || ($region == 'content_bottom')) {
    $variables['attributes']['class'][] = 'fixwidth';
  }
  if ($region == 'page_header') {
    // dsm($variables['elements']['scitalksocialmediashareblock']);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 * Alters variables for page template.
 */
function scitalk_theme_preprocess_page(&$variables) {

  // Get the page header view mode for nodes and taxonomy terms where needed.
  // Get the route to find out what type of page this is
  $route = \Drupal::routeMatch();
  $routename = $route->getRouteName();

  // For talks and speakers (nodes)
  if (($routename == 'entity.node.canonical') || ($routename == 'entity.node.preview')) {
    // If the node object exists:
    if ($routename == 'entity.node.canonical') {
      $node = \Drupal::routeMatch()->getParameter('node');
    } else if ($routename == 'entity.node.preview') {
      $node = \Drupal::routeMatch()->getParameter('node_preview');
    }
    if (isset($node) && (($node->getType() == 'talk') || ($node->getType() == 'speaker_profile'))) {
      $page_header_markup = \Drupal::entityTypeManager()->getViewBuilder('node')->view($node, 'page_header');
      $variables['page_header_view'] = render($page_header_markup);
    }
  }
  // For taxonomy terms
  else if ($routename = 'entity.taxonomy_term.canonical') {
    $term_id = $route->getRawParameter('taxonomy_term');
    if ($term_id != NULL) {
      $term = Term::load($term_id);
    }

    // This is doing that thing where it gets all the fields from the default view mode not the view mode requested.
    if (isset($term) && ($term->bundle() == 'collection')) {
      $view = \Drupal::entityTypeManager()->getViewBuilder('taxonomy_term')->view($term, 'page_header');
      $variables['page_header_view'] = render($view);
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 * Alters variables for nodes.
 */
function scitalk_theme_preprocess_node(&$variables) {
   $node = $variables['node'];

   // Get the related talks block and
   $variables['related_talks_block'] = views_embed_view('scitalk_talks_in_collection', 'related_talks');
}

/**
 * Implements hook_preprocess_HOOK() for blocks.
 */
function scitalk_theme_preprocess_block(&$variables) {
  // Change the title on the Talks by speaker view.
  if ($variables['derivative_plugin_id'] == 'scitalk_talks_in_collection-scitalk_talk_by_speaker_block') {
    $speaker_nid = $variables['content']['#view']->argument['field_talk_speaker_profile_target_id']->getValue('value');
    $speaker_node = \Drupal\node\Entity\Node::load($speaker_nid);
    if (isset($speaker_node)) {
      $speaker_name = $speaker_node->get('field_sp_display_name')->getValue();
      $variables['label'] = t('Talks by ') . $speaker_name[0]['value'];
    }
  }
  // Add search form classes to search exposed form, for default search view & solr search view
  if (($variables['derivative_plugin_id'] == 'default_search_content-page_2') ||
    ($variables['derivative_plugin_id'] == 'solr_search_content-page_2')) {
    $variables['attributes']['class'][] = 'search-block-form';
    $variables['title_attributes']['class'][] = 'visually-hidden';
  }

  //new default search
  if ($variables['derivative_plugin_id'] == 'scitalk_default_advanced_search2-talks_search') {
    $variables['attributes']['class'][] = 'search-block-form';
    $variables['title_attributes']['class'][] = 'visually-hidden';
  }
}

/*
 * Implements hook_preprocess_HOOK() for media entities.
 */
function scitalk_theme_preprocess_media(&$variables) {
  $variables['bundle'] = $variables['media']->bundle();
}
/**
 * Implements hook_preprocess_HOOK().
 * Alters variables for views.
 */
function scitalk_theme_preprocess_views_view(&$variables) {
  $view = $variables['view'];
  // For search view, get exposed input and view count.
  if ($view->id() == 'scitalk_advanced_search') {
    $exposed_input = $view->getExposedInput();
    if (!empty($exposed_input)) {
      $variables['search_input'] = $exposed_input['search_api_fulltext'];
    }
    $variables['search_result_count'] = $view->total_rows;
  }
}

/*
 Implements hook_form_alter()
 */
function scitalk_theme_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  // Alter search form to hide form label in basic form
  if (($form['#id'] == 'views-exposed-form-scitalk-advanced-search-basic-search'))  {
    // Solr search.
    $form['keys']['#title_display'] = 'invisible';
    $form['keys']['#attributes']['placeholder'] = t('Search');
    $form['keys']['#size'] = 20;

    // Database search.
    $form['search_api_fulltext']['#title_display'] = 'invisible';
    $form['search_api_fulltext']['#attributes']['placeholder'] = t('Search');
    $form['search_api_fulltext']['#size'] = 20;

  }

  //luis: for advanced search section
  if ($form['#id'] == 'views-exposed-form-scitalk-advanced-search-advanced-search')  {
    $form['keys']['#title_display'] = 'invisible';
    $form['keys']['#attributes']['placeholder'] = t('Search');
    $form['keys']['#size'] = 20;

    // Add some wrappers for two-column layout
    $form['search_api_fulltext']['#prefix'] = '<div class="search-wrap"> <div class="content-search-wrap">';

    $form['from']['#prefix'] = '<div class="date-search-wrap">';
    //  This closes the content-search-wrap as well
    $form['to']['#suffix'] = '</div></div>';
    $form['type']['#prefix'] = '<div class="content-search-wrap">';
    $form['sort_bef_combine']['#suffix'] = '</div></div>';
    if (!empty($form['talk_subject']['#options'])) {
      foreach ($form['talk_subject']['#options'] as $key => &$option) {
        if ($key == 'All') {
          $option = t('All Subjects');
          break;
        }
      }
    }

    foreach ($form['type']['#options'] as $key => &$option) {
      if ($key == 'All') {
        $option = t('All Types');
         break;
      }
    }

    //in Advanced Search replace the search by repository textbox field by a dropdown
    if (!empty($form['repository_id'])) {
      $sql = "SELECT entity_id, title as repo_short_name, node__field_repo_institution.field_repo_institution_value as institution_short_name
        FROM node_field_data
        JOIN node__field_repo_institution ON node_field_data.nid = node__field_repo_institution.entity_id
        ORDER BY institution_short_name";

      $repositories = \Drupal::database()->query($sql)->fetchAll();
      $options = [];
      foreach ($repositories as $repo) {
          $options[$repo->entity_id] = $repo->institution_short_name . ' - ' . $repo->repo_short_name;
      }

      $form['repository_id'] = [
        '#type' => "select",
        '#size' => 1,
        '#default_value' => t('All Repositories'),
        '#validated' => TRUE,
        '#empty_option' => t('All Repositories'),
        '#options' => $options
      ];
    }
  }

  //new default search
  if ($form['#id'] == 'views-exposed-form-scitalk-default-advanced-search2-talks-search')  {
    $form['actions']['submit']['#attributes'] = array('class' => array('do-advanced-search'));

    if (!empty($form['talk_subject']['#options'])) {
      foreach ($form['talk_subject']['#options'] as $key => &$option) {
        if ($key == 'All') {
          $option = t('All Subjects');
          break;
        }
      }
    }
  }
}

/**
 * Create template suggestion for forms
 */
function scitalk_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'form__' . str_replace('-','_', $variables['element']['#id']);
}

/**
 * Alter page attachments
 * Send variable to DrupalSettings for advanced search page
*/
function scitalk_theme_page_attachments_alter(array &$page) {
  $route = \Drupal::routeMatch();
  $routename = $route->getRouteName();
  $search_terms = \Drupal::request()->query->get('search_api_fulltext');
  if (($routename == 'view.scitalk_advanced_search.advanced_search') &&
      empty($search_terms)) {
    $page['#attached']['drupalSettings']['scitalk']['adv_search_page'] = 'true';
  }
}
